name: Build and Release Multi-Platform

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-windows:
    name: Build Windows (${{ matrix.arch }})
    runs-on: windows-latest
    timeout-minutes: 15
    strategy:
      matrix:
        arch: [x64, x86]
        include:
          - arch: x64
            python_arch: x64
            artifact_suffix: "windows-x64"
            file_ext: ".exe"
          - arch: x86
            python_arch: x86
            artifact_suffix: "windows-x86"
            file_ext: ".exe"
    steps:
      - uses: actions/checkout@v4
      
      - name: Clean workspace
        run: Remove-Item -Recurse -Force build, dist, __pycache__ -ErrorAction SilentlyContinue

      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          architecture: ${{ matrix.python_arch }}
        
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller==6.12.0 pywin32

      - name: Create version info
        run: |
          $version = $env:GITHUB_REF_NAME.Substring(1)
          @"
          VSVersionInfo(
            ffi=FixedFileInfo(
              filevers=($version.Split('.') + @(0, 0))[0..3],
              prodvers=($version.Split('.') + @(0, 0))[0..3],
              mask=0x3f,
              flags=0x0,
              OS=0x40004,
              fileType=0x1,
              subtype=0x0,
              date=(0, 0)
            ),
            kids=[
              StringFileInfo([
                StringTable(
                  '040904b0',
                  [StringStruct('CompanyName', 'Still_Alive and WaiJade'),
                  StringStruct('FileDescription', 'ok_school_life'),
                  StringStruct('FileVersion', '$version'),
                  StringStruct('LegalCopyright', 'Copyright Â© 2024 Still_Alive and WaiJade'),
                  StringStruct('ProductName', 'ok_school_life'),
                  StringStruct('ProductVersion', '$version')])
              ]),
              VarFileInfo([VarStruct('Translation', [1033, 1200])])
            )
          "@ | Out-File -Encoding utf8 version_info.py

      - name: Build executable
        run: |
          $version = $env:GITHUB_REF_NAME.Substring(1)
          pyinstaller --onefile --console --version-file version_info.py --log-level WARN ok_school_life.py
          
          if (-not (Test-Path "dist\ok_school_life.exe")) {
            Write-Output "::error::Build failed - executable not found!"
            Get-Content -Path "build\ok_school_life\warn-ok_school_life.txt" -ErrorAction SilentlyContinue
            exit 1
          }
          
          $newName = "ok_school_life-${{ matrix.artifact_suffix }}-$version${{ matrix.file_ext }}"
          Rename-Item -Path "dist\ok_school_life.exe" -NewName $newName
          dir dist

      - uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_suffix }}
          path: dist/ok_school_life-${{ matrix.artifact_suffix }}-*

  build-linux:
    name: Build Linux (${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up QEMU (ARM64 only)
        if: matrix.arch == 'arm64'
        uses: docker/setup-qemu-action@v3
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Build executable
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          
          if [ "${{ matrix.arch }}" == "arm64" ]; then
            docker run --rm --platform linux/arm64 -v $(pwd):/src -w /src python:3.10-slim \
              sh -c "pip install pyinstaller && pyinstaller --onefile --console ok_school_life.py"
          else
            pyinstaller --onefile --console ok_school_life.py
          fi
          
          version=${GITHUB_REF#refs/tags/v}
          mv dist/ok_school_life "dist/ok_school_life-linux-${{ matrix.arch }}-$version"
          file dist/ok_school_life-linux-${{ matrix.arch }}-*

      - uses: actions/upload-artifact@v4
        with:
          name: linux-${{ matrix.arch }}
          path: dist/ok_school_life-linux-${{ matrix.arch }}-*

  build-macos:
    name: Build macOS (${{ matrix.arch }})
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x64, arm64]
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      
      - name: Build executable
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          
          if [ "${{ matrix.arch }}" == "arm64" ]; then
            export ARCHFLAGS="-arch arm64"
          fi
          
          pyinstaller --onefile --console ok_school_life.py
          
          version=${GITHUB_REF#refs/tags/v}
          mv dist/ok_school_life "dist/ok_school_life-macos-${{ matrix.arch }}-$version"
          file dist/ok_school_life-macos-${{ matrix.arch }}-*

      - uses: actions/upload-artifact@v4
        with:
          name: macos-${{ matrix.arch }}
          path: dist/ok_school_life-macos-${{ matrix.arch }}-*

  create-release:
    name: Create Release
    needs: [build-windows, build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/download-artifact@v4
        with:
          path: release-files
          merge-multiple: true

      - name: Verify binaries
        run: |
          echo "=== Built files ==="
          find release-files -type f -exec file {} \;
          
          echo "=== Windows metadata ==="
          find release-files -name "*.exe" -exec exiftool {} \; | grep -E "Author|Company|Copyright"

      - uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: |
            ## Multi-Platform Build
            
            ### Supported Architectures
            - Windows (x86/x64)
            - Linux (x64/ARM64)
            - macOS (x64/ARM64)
            
            ### Build Info
            - Version: ${{ github.ref_name }}
            - Build Date: $(date -u +'%Y-%m-%d %H:%M:%S UTC')
            
            ### Authors
            - Still_Alive
            - WaiJade
          files: |
            release-files/ok_school_life-*